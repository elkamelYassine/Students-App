# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'TaperLeSectionET.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from configparser import SectionProxy
from PyQt5 import QtCore, QtGui, QtWidgets
from AffichageMatiere import Ui_AffichageMatiere
import Matiere as Mat


def Keys (Section):
    Tab=[]
    for key in Mat.Matieres:
        if (Mat.Matieres[key][1]==Section) :
            Tab.append(key)
    return Tab
    

class Ui_RechSectionMat(object):
    def openAffichageMatiere(self,dict):
        self.window=QtWidgets.QMainWindow()
        self.ui= Ui_AffichageMatiere()
        self.ui.setupUi(self.window,dict)
        self.window.show()

    def setupUi(self, RechSectionMat):  
        RechSectionMat.setObjectName("RechSectionMat")
        RechSectionMat.resize(556, 444)
        self.centralwidget = QtWidgets.QWidget(RechSectionMat)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(0, 0, 701, 771))
        self.widget.setStyleSheet("QWidget#widget{\n"
"background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:0.893, y2:0, stop:0 rgba(92, 37, 141, 255), stop:1 rgba(67, 137, 162, 255))\n"
" }")
        self.widget.setObjectName("widget")
        self.Section = QtWidgets.QLineEdit(self.widget)
        self.Section.setGeometry(QtCore.QRect(180, 180, 231, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Section.setFont(font)
        self.Section.setObjectName("Section")
        self.pushButtonChercher = QtWidgets.QPushButton(self.widget)
        self.pushButtonChercher.setGeometry(QtCore.QRect(360, 300, 75, 23))
        self.pushButtonChercher.setObjectName("pushButtonChercher")
        self.pushButtonChercher.clicked.connect(self.getInfos)
        
        self.Section_2 = QtWidgets.QLabel(self.widget)
        self.Section_2.setGeometry(QtCore.QRect(180, 140, 225, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Section_2.setFont(font)
        self.Section_2.setObjectName("Section_2")
        self.Icon = QtWidgets.QLabel(self.widget)
        self.Icon.setGeometry(QtCore.QRect(30, 50, 101, 101))
        self.Icon.setObjectName("Icon")
        self.Lamatierenexistepas = QtWidgets.QLabel(self.widget)
        self.Lamatierenexistepas.setGeometry(QtCore.QRect(130, 70, 261, 31))
        self.Lamatierenexistepas.setObjectName("Lamatierenexistepas")
        self.Lamatierenexistepas.setHidden(True)
        self.infoinvalideSection = QtWidgets.QLabel(self.widget)
        self.infoinvalideSection.setGeometry(QtCore.QRect(170, 210, 251, 31))
        self.infoinvalideSection.setObjectName("infoinvalideSection")
        self.infoinvalideSection.setHidden(True)
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(130, 40, 361, 21))
        self.label.setObjectName("label")
        RechSectionMat.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(RechSectionMat)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 556, 21))
        self.menubar.setObjectName("menubar")
        RechSectionMat.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(RechSectionMat)
        self.statusbar.setObjectName("statusbar")
        RechSectionMat.setStatusBar(self.statusbar)

        self.retranslateUi(RechSectionMat)
        QtCore.QMetaObject.connectSlotsByName(RechSectionMat)

    def retranslateUi(self, RechSectionMat):
        _translate = QtCore.QCoreApplication.translate
        RechSectionMat.setWindowTitle(_translate("RechSectionMat", "Recherche par section"))
        self.pushButtonChercher.setText(_translate("RechSectionMat", "Chercher"))
        self.Section_2.setText(_translate("RechSectionMat", "<html><head/><body><p align=\"center\"><span style=\" color:#ffffff;\">Section</span></p></body></html>"))
        self.Icon.setText(_translate("RechSectionMat", "<html><head/><body><p><img src=\":/newPrefix/livre.png\"/></p></body></html>"))
        self.Lamatierenexistepas.setText(_translate("RechSectionMat", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; color:#ff0000;\">Section inexistante</span></p></body></html>"))
        self.infoinvalideSection.setText(_translate("RechSectionMat", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; color:#ff0000;\">Section invalide</span></p></body></html>"))
        self.label.setText(_translate("RechSectionMat", "<html><head/><body><p><span style=\" font-size:14pt; color:#ffffff;\">Tapez la section de la matiere</span></p></body></html>"))
    def getInfos(self):
        Section=self.Section.text()
        dict={}
        if (Mat.SaisieSection(Section)) :
            if (Mat.RechercheParSection(Mat.Matieres,Section)): 
                Tab=Keys(Section)
                for i in Tab:
                    dict.update ({i:Mat.Matieres[i]})
                self.openAffichageMatiere(dict)
                self.Lamatierenexistepas.setHidden(True)
                self.infoinvalideSection.setHidden(True)
            else :
                self.Lamatierenexistepas.setHidden(False)
                self.infoinvalideSection.setHidden(True)
        else:
            self.infoinvalideSection.setHidden(False)
            self.Lamatierenexistepas.setHidden(True)
        
import icons_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    app.setWindowIcon(QtGui.QIcon('ISIMM_LOGO.png'))
    RechSectionMat = QtWidgets.QMainWindow()
    ui = Ui_RechSectionMat()
    ui.setupUi(RechSectionMat)
    RechSectionMat.show()
    sys.exit(app.exec_())