# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Bulletin.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import Etudiant as ET
import Matiere as Mat
import Note as NT
# import SaisieNumInscrit as N
import subprocess
import sys
from table_function import *


class Ui_Bulletin(object):

    def setupUi(self, Bulletin, Numinscrits, Semestres):
        dicts = {key: NT.Notes[key] for key in NT.Notes
                 if key[0] == Numinscrits}

        Bulletin.setObjectName("Bulletin")
        Bulletin.resize(885, 676)
        Bulletin.setStatusTip("")

        self.IconNote = QtWidgets.QLabel(Bulletin)
        self.IconNote.setGeometry(QtCore.QRect(40, 40, 101, 101))
        self.IconNote.setObjectName("IconNote")
        self.widget = QtWidgets.QWidget(Bulletin)
        self.widget.setGeometry(QtCore.QRect(-30, 0, 951, 741))
        self.widget.setStyleSheet("QWidget#widget{\n"
                                  "background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:0.948, y2:0.936864, stop:0.522727 rgba(10, 204, 184, 250), stop:1 rgba(30, 169, 234)) \n"
                                  "}")
        self.widget.setObjectName("widget")

        self.AffichageEtudiants = QtWidgets.QLabel(self.widget)
        self.AffichageEtudiants.setGeometry(QtCore.QRect(330, 20, 401, 51))
        self.AffichageEtudiants.setObjectName("AffichageEtudiants")
        self.tableAffichage = QtWidgets.QTableWidget(self.widget)
        self.tableAffichage.setGeometry(QtCore.QRect(80, 300, 771, 161))
        self.tableAffichage.setStyleSheet("QWidget#widget{\n"
                                          "\n"
                                          "background-color:qlineargradient(spread:pad, x1:0, y1:0, x2:0.893, y2:0, stop:0 rgba(92, 37, 141, 255), stop:1 rgba(67, 137, 162, 255))\n"
                                          " \n"
                                          "    font: 11pt \"MS Shell Dlg 2\";\n"
                                          " }\n"
                                          "")
        self.tableAffichage.setFrameShadow(QtWidgets.QFrame.Plain)
        self.tableAffichage.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableAffichage.setTabKeyNavigation(True)
        self.tableAffichage.setGridStyle(QtCore.Qt.DashLine)
        self.tableAffichage.setObjectName("tableAffichage")
        self.tableAffichage.setColumnCount(5)

        self.tableAffichage.setRowCount(len(dicts))

        item = QtWidgets.QTableWidgetItem()
        self.tableAffichage.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.tableAffichage.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.tableAffichage.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.tableAffichage.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableAffichage.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableAffichage.setHorizontalHeaderItem(4, item)
        self.tableAffichage.horizontalHeader().setCascadingSectionResizes(False)
        self.tableAffichage.horizontalHeader().setDefaultSectionSize(148)
        self.tableAffichage.horizontalHeader().setStretchLastSection(False)
        self.Semestre = QtWidgets.QLabel(self.widget)
        self.Semestre.setGeometry(QtCore.QRect(610, 480, 201, 31))
        self.Semestre.setObjectName("Semestre")

        self.Semestre_2 = QtWidgets.QLabel(self.widget)
        self.Semestre_2.setGeometry(QtCore.QRect(740, 480, 181, 31))
        self.Semestre_2.setObjectName("Nom_Prenom_2")

        self.ISIMMIcon = QtWidgets.QLabel(self.widget)
        self.ISIMMIcon.setGeometry(QtCore.QRect(430, 80, 101, 101))
        self.ISIMMIcon.setObjectName("ISIMMIcon")
        self.Nom_Prenom = QtWidgets.QLabel(self.widget)
        self.Nom_Prenom.setGeometry(QtCore.QRect(60, 210, 201, 31))
        self.Nom_Prenom.setObjectName("Nom_Prenom")
        self.NumInscritBull = QtWidgets.QLabel(self.widget)
        self.NumInscritBull.setGeometry(QtCore.QRect(610, 210, 151, 31))
        self.NumInscritBull.setObjectName("NumInscrit")
        self.Nom_Prenom_2 = QtWidgets.QLabel(self.widget)
        self.Nom_Prenom_2.setGeometry(QtCore.QRect(290, 210, 181, 31))
        self.Nom_Prenom_2.setObjectName("Nom_Prenom_2")
        self.NumInscritBull_2 = QtWidgets.QLabel(self.widget)
        self.NumInscritBull_2.setGeometry(QtCore.QRect(780, 210, 181, 31))
        self.NumInscritBull_2.setObjectName("NumInscrit_2")
        self.Moyenne = QtWidgets.QLabel(self.widget)
        self.Moyenne.setGeometry(QtCore.QRect(80, 530, 171, 31))
        self.Moyenne.setObjectName("Moyenne")
        self.Moyenne_2 = QtWidgets.QLabel(self.widget)
        self.Moyenne_2.setGeometry(QtCore.QRect(250, 530, 91, 31))
        self.Moyenne_2.setObjectName("Moyenne_2")
        self.EnregistrerPDF = QtWidgets.QPushButton(self.widget)
        self.EnregistrerPDF.setGeometry(QtCore.QRect(780, 550, 91, 31))
        self.EnregistrerPDF.setObjectName("EnregistrerPDF")
        self.EnregistrerPDF.clicked.connect(lambda: self.PDF(Numinscrits, Semestres))

        self.Imprimer = QtWidgets.QPushButton(self.widget)
        self.Imprimer.setGeometry(QtCore.QRect(670, 550, 91, 31))
        self.Imprimer.setObjectName("Imprimer")
        self.Imprimer.clicked.connect(lambda: self.imprimer(Numinscrits,Semestres))

        self.widget.raise_()
        self.IconNote.raise_()

        self.tableAffichage.setItem(1, 0, QtWidgets.QTableWidgetItem("seelm"))

        # self.ShowBulletin(False)
        self.loadData(Numinscrits, Semestres)
        self.showInfos(Numinscrits, Semestres)
        self.retranslateUi(Bulletin, Semestres)
        QtCore.QMetaObject.connectSlotsByName(Bulletin)

    def retranslateUi(self, Bulletin, Semestres):
        _translate = QtCore.QCoreApplication.translate
        Bulletin.setWindowTitle(_translate("Bulletin", "Bulletin de notes"))

        self.IconNote.setText(
            _translate("Bulletin", "<html><head/><body><p><img src=\":/newPrefix/183338.png\"/></p></body></html>"))
        self.AffichageEtudiants.setText(_translate("Bulletin",
                                                   "<html><head/><body><p><span style=\" font-size:28pt; color:#ffffff;\">Bulletin de notes</span></p></body></html>"))
        item = self.tableAffichage.verticalHeaderItem(0)
        item.setText(_translate("Bulletin", "1"))
        item = self.tableAffichage.verticalHeaderItem(1)

        item = self.tableAffichage.horizontalHeaderItem(0)
        item.setText(_translate("Bulletin", "Code"))
        item = self.tableAffichage.horizontalHeaderItem(1)
        item.setText(_translate("Bulletin", "Designiation"))
        item = self.tableAffichage.horizontalHeaderItem(2)
        item.setText(_translate("Bulletin", "Note Ds"))
        item = self.tableAffichage.horizontalHeaderItem(3)
        item.setText(_translate("Bulletin", "Note Examen"))
        item = self.tableAffichage.horizontalHeaderItem(4)
        item.setText(_translate("Bulletin", "Moyenne"))
        self.ISIMMIcon.setText(
            _translate("Bulletin", "<html><head/><body><p><img src=\":/newPrefix/ISIMM_LOGO.png\"/></p></body></html>"))
        self.Nom_Prenom.setText(_translate("Bulletin",
                                           "<html><head/><body><p align=\"center\"><span style=\" font-size:11pt; color:#ffffff;\">Nom et Prenom de l\'etudiant:</span></p></body></html>"))
        self.NumInscritBull.setText(_translate("Bulletin",
                                               "<html><head/><body><p align=\"center\"><span style=\" font-size:11pt; color:#ffffff;\">Num√©ro d\'inscription:</span></p></body></html>"))
        self.Moyenne.setText(_translate("Bulletin",
                                        "<html><head/><body><p><span style=\" font-size:14pt; color:#ffffff;\">Moyenne Generale:</span></p></body></html>"))
        if Semestres:
            self.Semestre.setText(_translate("Bulletin",
                                             "<html><head/><body><p><span style=\" font-size:14pt; color:#ffffff;\">Semestre :</span></p></body></html>"))

        # self.Moyenne_2.setText(_translate("Bulletin", "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt; font-weight:600; color:#ffffff;\">10.22</span></p></body></html>"))
        self.EnregistrerPDF.setText(_translate("Bulletin", "Enregistrer PDF"))
        self.Imprimer.setText(_translate("Bulletin", "Imprimer"))

    def ShowBulletin(self, B):
        if (not B):
            Bulletin.resize(885, 676)
        self.IconNote.setHidden(B)
        self.AffichageEtudiants.setHidden(B)
        self.tableAffichage.setHidden(B)
        self.ISIMMIcon.setHidden(B)
        self.Nom_Prenom.setHidden(B)
        self.NumInscritBull.setHidden(B)
        self.Nom_Prenom_2.setHidden(B)
        self.NumInscritBull_2.setHidden(B)
        self.Moyenne.setHidden(B)
        self.Moyenne_2.setHidden(B)
        self.EnregistrerPDF.setHidden(B)
        self.Imprimer.setHidden(B)

    def showInfos(self, Numinscrits, Semestres):
        _translate = QtCore.QCoreApplication.translate
        Nom_Prenom = ET.Etudiants[Numinscrits][0] + " " + ET.Etudiants[Numinscrits][1]
        self.Nom_Prenom_2.setText(_translate("Bulletin",
                                             "<html><head/><body><p><span style=\" font-size:14pt; color:#ffffff;\">" + Nom_Prenom + "</span></p></body></html>"))
        self.NumInscritBull_2.setText(_translate("Bulletin",
                                                 "<html><head/><body><p><span style=\" font-size:14pt; color:#ffffff;\">" + Numinscrits + "</span></p></body></html>"))
        if Semestres:
            self.Semestre_2.setText(_translate("Bulletin",
                                               "<html><head/><body><p><span style=\" font-size:14pt; color:#ffffff;\">" + Semestres + "</span></p></body></html>"))

            Dict = {x: NT.Notes[x] for x in NT.Notes
                    if x[0] == Numinscrits and Mat.Matieres[x[1]][3] == Semestres}
            self.Moyenne_2.setText(_translate("Bulletin",
                                          "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt; font-weight:600; color:#ffffff;\">" + str(
                                              self.CalculMoyenneGen(Numinscrits,Dict)) + "</span></p></body></html>"))
        else:
            self.Moyenne_2.setText(_translate("Bulletin",
                                              "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt; font-weight:600; color:#ffffff;\">" + str(
                                                  self.CalculMoyenneGen(Numinscrits)) + "</span></p></body></html>"))

    def CalculMoyenneMat(self, keys):
        return (round(float(NT.Notes[keys][0]),2) * 0.25 + round(float(NT.Notes[keys][1]),2) * 0.75)

    def CalculMoyenneGen(self, Numinscrits,dicts=NT.Notes):
        Moy = 0
        Coefficinets = 0
        for keys in dicts:
            if keys[0] == Numinscrits:
                Coefficinets += float(Mat.Matieres[keys[1]][2])
                Moy += self.CalculMoyenneMat(keys) * float(Mat.Matieres[keys[1]][2])
        Moy /= Coefficinets
        return (round(Moy, 2))

    def loadData(self, Numinscrits, Semestres):
        row = 0
        if Semestres:
            Dict = {x: NT.Notes[x] for x in NT.Notes
                    if x[0] == Numinscrits and Mat.Matieres[x[1]][3] == Semestres}
        else:
            Dict = NT.Notes

        for keys in Dict:
            if keys[0] == Numinscrits:
                # self.tableAffichage.setRowCount(row)
                print("Ok")
                self.tableAffichage.setItem(row, 0, QtWidgets.QTableWidgetItem(str(keys[1])))

                self.tableAffichage.setItem(row, 1, QtWidgets.QTableWidgetItem(str(Mat.Matieres[keys[1]][0])))
                self.tableAffichage.setItem(row, 2, QtWidgets.QTableWidgetItem(str(NT.Notes[keys][0])))
                self.tableAffichage.setItem(row, 3, QtWidgets.QTableWidgetItem(str(NT.Notes[keys][1])))
                self.tableAffichage.setItem(row, 4, QtWidgets.QTableWidgetItem(str(self.CalculMoyenneMat(keys))))
                row = row + 1

    def FailedMsg(self):
        msg = QMessageBox()
        msg.setWindowTitle("Enregistrement echou√©")
        msg.setText("Enregistrement non valide !")
        msg.setStandardButtons(QMessageBox.Ok)
        msg.setIcon(QMessageBox.Critical)
        msg.setDetailedText(
            "Impossible d'enregistrer le fichier sous forme PDF. Essayez de quitter le fichier PDF.")
        x = msg.exec_()

    def FailedMsg2(self):
        msg = QMessageBox()
        msg.setWindowTitle("Erreur d'imprimation")
        msg.setText("imprimation √©chou√© !")
        msg.setStandardButtons(QMessageBox.Ok)
        msg.setIcon(QMessageBox.Critical)
        msg.setDetailedText(
            "Impossible d'imprimer le fichier il faut l'enregistrer sous forme PDF d'abord.")
        x = msg.exec_()



    def PDF(self, Numinscrits, Semestres):
        data = {}
        row = 0
        if Semestres:
            Dict = {x: NT.Notes[x] for x in NT.Notes
                    if x[0] == Numinscrits and Mat.Matieres[x[1]][3] == Semestres}
        else:
            Dict = NT.Notes

        data = ({"Code Matiere": [], "Designation": [],
                 "Note DS": [], "Note examens": [],
                 "Moyenne de Matiere": []})

        for keys in Dict:
            if keys[0] == Numinscrits:
                # self.tableAffichage.setRowCount(row)
                data["Code Matiere"].append((str(keys[1])))
                data["Designation"].append((str(Mat.Matieres[keys[1]][0])))
                data["Note DS"].append((str(NT.Notes[keys][0])))
                data["Note examens"].append(str(NT.Notes[keys][1]))
                data["Moyenne de Matiere"].append((str(self.CalculMoyenneMat(keys))))
        #  '                 Bulletin de notes\n\n'
        Nom_Prenom = ET.Etudiants[Numinscrits][0] + " " + ET.Etudiants[Numinscrits][1]
        pdf = PDF()
        pdf.add_page()
        pdf.set_font("Times", size=10)


        try:

            pdf.create_table(Numinscrits, Nom_Prenom, str(self.CalculMoyenneGen(Numinscrits,Dict)), Semestres, "Bulletin de notes",
                             "", table_data=data, cell_width='even')

            pdf.ln()
            if Semestres:
                pdf.output('Bulletin de ' + Numinscrits + " " + Semestres + '.pdf')
            else:
                pdf.output('Bulletin de ' + Numinscrits + '.pdf')

        except:
            self.FailedMsg()

    def imprimer(self,Numinscrits,Semestres):
        if Semestres :
            ch ='Bulletin de ' + Numinscrits + " " + Semestres + '.pdf'
        else :
            ch='Bulletin de ' + Numinscrits + '.pdf'

        try:

            os.startfile(ch, "print")
        except :
            self.FailedMsg2()

import icons_rc

if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Bulletin = QtWidgets.QWidget()
    ui = Ui_Bulletin()
    # Numinscrits="1234568"
    ui.setupUi(Bulletin, Numinscrits, Semestre)

    Bulletin.show()
    # ui.openSaisieNumInscrit()
    sys.exit(app.exec_())
